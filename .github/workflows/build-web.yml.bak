# https://github.com/bitwarden/clients/blob/main/.github/workflows/build-web.yml
---
name: Build Web

on:
  workflow_call:
    inputs: {}
  workflow_dispatch:
    inputs: {}
  push:
    branches: [master, main]
  schedule:
    # On every Sunday 12:00
    - cron: "0 12 * * 0"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      latest_web_tag: ${{ steps.gen_vars.outputs.latest_web_tag }}
      node_version: ${{ steps.retrieve-node-version.outputs.node_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Clone real repo
        run: |
          git clone https://github.com/bitwarden/clients.git

      - name: Get Latest Web Tag
        id: gen_vars
        working-directory: ./clients
        run: |
          # Find all tags and sort by time
          git fetch --tags
          tags=$(git tag --sort=-creatordate)
          # Find "web" tag
          latest_web_tag=""
          for tag in $tags; do
              if [[ $tag == *"web"* ]]; then
                  latest_web_tag=$tag
                  break
              fi
          done

          echo "latest_web_tag=$latest_web_tag" >> $GITHUB_OUTPUT
          echo "latest_web_tag=$latest_web_tag"

      - name: Get Node Version
        id: retrieve-node-version
        working-directory: ./clients
        run: |
          NODE_NVMRC=$(cat .nvmrc)
          NODE_VERSION=${NODE_NVMRC/v/''}
          echo "node_version=$NODE_VERSION" >> $GITHUB_OUTPUT

  build:
    name: Build
    runs-on: ubuntu-22.04
    needs:
      - setup
    env:
      _LATEST_WEB_TAG: ${{ needs.setup.outputs.latest_web_tag }}
      _NODE_VERSION: ${{ needs.setup.outputs.node_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Clone real repo
        run: |
          git clone https://github.com/bitwarden/clients.git

      - name: Setup repo
        working-directory: ./clients
        run: |
          git fetch --tags
          echo "Checking out ${{ env._LATEST_WEB_TAG }}"
          git checkout ${{ env._LATEST_WEB_TAG }}

      - name: Set up Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          node-version: ${{ env._NODE_VERSION }}

      - name: Print environment
        run: |
          node --version
          npm --version

      - name: Apply internal patch
        run: |
          # To create a patch, git diff > mypatch.patch
          repo_dir="clients"
          patches_dir="patches"

          cp -r $patches_dir/* .

          cp fakePremium.patch "$repo_dir"

          cd "$repo_dir"

          git apply fakePremium.patch -v

      - name: NPM setup
        run: npm ci
        working-directory: ./clients/

      - name: Build dist
        # Unable to use the official Bitwarden server
        # There may be CORS issues, good luck with that
        run: NODE_ENV=production ENV=cloud npm run build:oss
        working-directory: ./clients/apps/web

      - name: Package artifact
        working-directory: ./clients/apps/web
        run: zip -r dist-web.zip build

      - name: Upload artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: dist-${{ env._LATEST_WEB_TAG }}.zip
          path: ./clients/apps/web/dist-web.zip
          if-no-files-found: error

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: "./clients/apps/web/build/"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
